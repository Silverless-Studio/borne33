.container {
  // sass-lint:disable-block indentation
  display: grid;
  gap: var(--grid-gap);
  grid-template-columns:
    [full-start] minmax(calc(var(--container-margin) - var(--grid-gap)), 1fr)
    [center-start] repeat(
      12,
      [col-start]
        minmax(0.1rem, calc(($grid-width - (11 * var(--grid-gap))) / 12))
        [col-end]
    )
    [center-end] minmax(calc(var(--container-margin) - var(--grid-gap)), 1fr)
    [full-end];

  .row {
    grid-column: center-start / center-end;
    position: relative;

    @for $i from 1 through 12 {
      &__#{$i} {
        grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
      }

      &.col-#{$i} {
        grid-column-end: span #{$i};
      }

      &.col-offset-#{$i} {
        grid-column-start: #{$i + 2};
      }
    }

    &.extended {
      grid-column: full-start / full-end;
    }

    &.mobile-full {
      @media only screen and (min-width: $bp-large) {
        grid-column: center-start / center-end;
      }
    }
  }
}

.grid {
  display: grid;
  gap: var(--grid-gap);

  @include respond(tab-port) {
    gap: calc(var(--grid-gap) * 2) var(--grid-gap);

    &:not(&__non-responsive) > * {
      grid-column: 1 / -1;
    }
  }

  @for $i from 1 through 12 {
    &__#{$i} {
      grid-template-columns: repeat(#{$i}, minmax(0, 1fr));
    }

    .col-span__#{$i} {
      grid-column-end: span #{$i};

      @include respond(tab-port) {
        grid-column: 1 / -1;
      }
    }

    .col-offset__#{$i} {
      grid-column-start: #{$i};
    }
  }

  .row {
    grid-column: 1 / -1;
    position: relative;

    &__12 {
      grid-column: 1 / -1;
    }

    &__10 {
      grid-column: 2 / -2;
    }

    &__8 {
      grid-column: 3 / -3;
    }

    &__6 {
      grid-column: 4 / -4;
    }
  }
}

.sticky {
  position: sticky;
  top: 10rem;
}

.grid-two {
  @media only screen and (min-width: $bp-large) {
    grid-template-columns: repeat(2, 1fr);
  }
}

.grid-three {
  @media only screen and (min-width: $bp-large) {
    grid-template-columns: repeat(3, 1fr);
  }
}

.grid-four {
  @media only screen and (min-width: $bp-large) {
    grid-template-columns: repeat(4, 1fr);
  }
}

.default-gap {
  grid-gap: 2.5rem;
}

.large-gap {
  grid-gap: 3rem;
}

.padding-default {
  padding-bottom: $default-padding;
}

.padding-large {
  padding-bottom: $large-padding;
}

.padding-small {
  padding-bottom: $small-padding;
}

.spacer {
  height: var(--content-spacer);
}
